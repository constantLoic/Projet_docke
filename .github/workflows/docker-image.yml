name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Checkout du code du dépôt
      - name: Check out the repo
        uses: actions/checkout@v4

      # Étape 2 : Connexion à Docker Hub en utilisant les identifiants stockés dans les Secrets GitHub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Étape 3 : Construction de l'image Docker en utilisant Docker Compose
      - name: Construction de l'image Docker
        run: docker-compose build

        # Étape 4 : Extraction et push des tags des images
      - name: Extraction et push des tags des images
        run: |
          # Extraire les tags des images depuis le fichier docker-compose.yml
          echo docker-compose config
          backend_image=$(docker-compose config | grep 'image:' | grep 'spm-backend' | awk '{print $2}')
          frontend_image=$(docker-compose config | grep 'image:' | grep 'spm-frontend' | awk '{print $2}')

          echo "Backend Image: $backend_image"
          echo "Frontend Image: $frontend_image"

          # Tag et push des images vers Docker Hub
          if [ -n "$backend_image" ]; then
            docker push $backend_image:latest
          fi

          if [ -n "$frontend_image" ]; then
            docker push $frontend_image:latest
          fi


      # # Étape 3 : Extraction des métadonnées pour Docker (tags, labels)
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: thetips4you/testjodejsapp

      # # Étape 4 : Construction et push de l'image Docker vers Docker Hub
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}